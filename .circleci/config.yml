version: 2
jobs:
  lint:
    working_directory: ~/mattermost-desktop
    docker:
    - image: electronuserland/builder:wine-chrome
    steps:
    - checkout
    - run:
        command: 'apt-get update && apt-get -y install '
    - run:
        command: npm install
    - restore_cache:
        key: lint-{{ arch }}-{{ .Branch }}-{{ checksum "package-lock.json" }}
    - run:
        command: npm run lint:js
    - save_cache:
        key: lint-{{ arch }}-{{ .Branch }}-{{ checksum "package-lock.json" }}
        paths:
        - node_modules
        - src/node_modules
  test:
    working_directory: ~/mattermost-desktop
    docker:
    - image: electronuserland/builder:wine-chrome
    steps:
    - checkout
    - run:
        command: apt-get update && apt-get -y install --no-install-recommends libgconf-2-4
    - run:
        command: npm install
    - run:
        command: ELECTRON_DISABLE_SANDBOX=1 xvfb-run --server-args="-screen 0 1920x1080x24" npm run test:app
    - run:
        command: mkdir -p /tmp/test-results
    - run:
        command: cp test-results.xml /tmp/test-results/
    - store_test_results:
        path: /tmp/test-results
  build:
    working_directory: ~/mattermost-desktop
    docker:
    - image: electronuserland/builder:wine-mono
    steps:
    - checkout
    - restore_cache:
        key: npm-{{ arch }}-{{ .Branch }}-{{ checksum "package-lock.json" }}
    - restore_cache:
        key: npm-{{ arch }}-{{ .Branch }}-{{ checksum "src/package-lock.json" }}
    - run:
        command: apt-get update && apt-get -y install --no-install-recommends jq icnsutils
          graphicsmagick tzdata
    - run:
        command: npm install
    - run:
        command: npm run build
    - run:
        command: npm run package:windows
    - run:
        command: jq '.mac.target=["zip"]' electron-builder.json > /tmp/electron-builder.json
          && cp /tmp/electron-builder.json .
    - run:
        command: npm run package:mac
    - run:
        command: npm run package:linux
    - run:
        command: mkdir -p /tmp/artifacts
    - run:
        command: sh -x ./scripts/cp_artifacts.sh release /tmp/artifacts
    - save_cache:
        key: npm-{{ arch }}-{{ .Branch }}-{{ checksum "package-lock.json" }}
        paths:
        - node_modules
        - ~/.cache/electron
        - ~/.cache/electron-builder
    - save_cache:
        key: npm-{{ arch }}-{{ .Branch }}-{{ checksum "src/package-lock.json" }}
        paths:
        - src/node_modules
    - store_artifacts:
        path: /tmp/artifacts/
        destination: packages
    - run:
        command: ./node_modules/.bin/build-storybook -c src/.storybook -o storybook
    - store_artifacts:
        path: storybook/
        destination: storybook
workflows:
  version: 2
  build_and_test:
    jobs:
    # guillermo.vaya: uncomment once test is fully green with no extras
    # - lint
    - test
    # - build:
    #     requires:
    #     - lint
    #     - test
